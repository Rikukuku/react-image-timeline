{"version":3,"sources":["assets/berlin.jpg","assets/chicago.jpg","assets/cairo.jpg","assets/london.jpg","assets/ny.jpg","assets/paris.jpg","assets/rome.jpg","assets/seoul.jpg","assets/tokyo.jpg","assets/madrid.jpg","assets/berlin_normalized.jpg","assets/chicago_normalized.jpg","assets/cairo_normalized.jpg","assets/london_normalized.jpg","assets/ny_normalized.jpg","assets/paris_normalized.jpg","assets/rome_normalized.jpg","assets/seoul_normalized.jpg","assets/tokyo_normalized.jpg","assets/madrid_normalized.jpg","assets/berlin_odd.jpg","assets/chicago_odd.jpg","assets/cairo_odd.jpg","assets/london_odd.jpg","assets/ny_odd.jpg","assets/paris_odd.jpg","assets/rome_odd.jpg","assets/seoul_odd.jpg","assets/tokyo_odd.jpg","assets/madrid_odd.jpg","lib/timeline.tsx","data.js","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","__webpack_require__","p","isNonZeroArray","a","Array","isArray","length","takeLast","isValidDate","date","Date","isNaN","getTime","formattedYear","String","getFullYear","Dot","React","memo","props","react_default","createElement","className","viewBox","cx","cy","r","stroke","Arrow","d","DefaultTopLabel","event","DefaultBottomLabel","DefaultHeader","title","day","getDate","month","getMonth","year","concat","formattedDate","DefaultFooter","onClick","e","preventDefault","x","buttonText","DefaultTextBody","text","DefaultImageBody","src","imageUrl","alt","ArrowAndDot","timeline_Arrow","timeline_Dot","Clear","key","Timeline","events","customComponents","reverseOrder","denseLayout","sortedEvents","slice","filter","_ref","sort","b","_ref2","topLabel","bottomLabel","header","footer","imageBody","textBody","TopComponent","BottomComponent","HeaderComponent","ImageBodyComponent","TextBodyComponent","FooterComponent","eventStyles","minHeight","timelineComposition","map","index","style","timeline_ArrowAndDot","timeline_Clear","IMAGES","berlin","chicago","cairo","london","ny","paris","rome","seoul","madrid","tokyo","IMAGES_ODD","berlin_odd","chicago_odd","cairo_odd","london_odd","ny_odd","paris_odd","rome_odd","seoul_odd","madrid_odd","tokyo_odd","IMAGES_NORMALIZED","berlin_normalized","chicago_normalized","cairo_normalized","london_normalized","ny_normalized","paris_normalized","rome_normalized","seoul_normalized","madrid_normalized","tokyo_normalized","CITY_NAMES","IPSUM","addDays","days","result","setDate","getSampleData","imageType","cities","type","images","R","getCitiesWithImages","mapWithIndex","location","Math","random","city","window","open","extras","foo","CustomTopLabel","CustomBottomLabel","CustomHeader","CustomFooter","CustomTextBody","CustomImageBody","App","state","_useState","useState","_useState2","Object","slicedToArray","setImageType","_useState3","_useState4","setEvents","_useState5","_useState6","useCustomComponents","setUseCustomComponents","_useState7","_useState8","setReverseOrder","_useState9","_useState10","setDenseLayout","onToggleReverseOrder","useCallback","onToggleDenseLayout","onToggleUseCustomComponents","onToggleImageType","newImageType","src_lib_timeline","textAlign","onChange","checked","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d3c3a9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/berlin.ce25fae9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chicago.4ce82aac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cairo.93047add.jpg\";","module.exports = __webpack_public_path__ + \"static/media/london.45d6bed0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ny.0ffaa772.jpg\";","module.exports = __webpack_public_path__ + \"static/media/paris.ce64ef1a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rome.07bf5618.jpg\";","module.exports = __webpack_public_path__ + \"static/media/seoul.3226472f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tokyo.db715524.jpg\";","module.exports = __webpack_public_path__ + \"static/media/madrid.a2269ec3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/berlin_normalized.ce25fae9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chicago_normalized.f5446e67.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cairo_normalized.93047add.jpg\";","module.exports = __webpack_public_path__ + \"static/media/london_normalized.0cfbfe06.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ny_normalized.a9ffc6ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/paris_normalized.c057153f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rome_normalized.3d9141e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/seoul_normalized.f800e061.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tokyo_normalized.db715524.jpg\";","module.exports = __webpack_public_path__ + \"static/media/madrid_normalized.96ea0252.jpg\";","module.exports = __webpack_public_path__ + \"static/media/berlin_odd.c90236bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chicago_odd.4ce82aac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cairo_odd.93047add.jpg\";","module.exports = __webpack_public_path__ + \"static/media/london_odd.45d6bed0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ny_odd.662443e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/paris_odd.6e14d373.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rome_odd.07bf5618.jpg\";","module.exports = __webpack_public_path__ + \"static/media/seoul_odd.15b4bf52.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tokyo_odd.4827fb38.jpg\";","module.exports = __webpack_public_path__ + \"static/media/madrid_odd.c07bc0c0.jpg\";","import React, { useState, useCallback } from 'react';\n\nexport interface TimelineEventClickHandler {\n  (event: any): void;\n}\n\nexport interface TimelineEvent {\n  date: Date;\n  title: string;\n  imageUrl: string;\n  text: string;\n  onClick?: TimelineEventClickHandler | null;\n  buttonText?: string | null;\n  extras?: object | null;\n}\n\nexport interface TimelineEventProps {\n  event: TimelineEvent;\n}\n\nexport interface TimelineCustomComponents {\n  topLabel?: React.PureComponent<TimelineEventProps> | React.ReactNode | null;\n  bottomLabel?: React.PureComponent<TimelineEventProps> | React.ReactNode | null;\n  header?: React.PureComponent<TimelineEventProps> | React.ReactNode | null;\n  imageBody?: React.PureComponent<TimelineEventProps> | React.ReactNode | null;\n  textBody?: React.PureComponent<TimelineEventProps> | React.ReactNode | null;\n  footer?: React.PureComponent<TimelineEventProps> | React.ReactNode | null;\n}\n\nexport interface TimelineProps {\n  customComponents?: TimelineCustomComponents | null;\n  events: Array<TimelineEvent>;\n  reverseOrder?: boolean;\n  denseLayout?: boolean;\n}\n\nconst isNonZeroArray = (a: Array<TimelineEvent>) => Array.isArray(a) && a.length > 0;\n\nconst takeFirst = (a: Array<TimelineEvent>) => (isNonZeroArray(a) ? a[0] : ({} as TimelineEvent));\n\nconst takeLast = (a: Array<TimelineEvent>) => (isNonZeroArray(a) ? a[a.length - 1] : ({} as TimelineEvent));\n\nconst isValidDate = (date: Date) => {\n  return date && date instanceof Date && !isNaN(date.getTime());\n};\n\nconst formattedYear = (date: Date) => {\n  return isValidDate(date) ? String(date.getFullYear()) : '-';\n};\n\nconst formattedDate = (date: Date) => {\n  if (!isValidDate(date)) return '-';\n  const day = String(date.getDate());\n  const month = String(date.getMonth() + 1);\n  const year = String(date.getFullYear());\n  return `${month.length > 1 ? month : '0' + month}/${day.length > 1 ? day : '0' + day}/${year}`;\n};\n\nconst Dot = React.memo(function Dot(props) {\n  return (\n    <svg className=\"rt-dot\" viewBox=\"0 0 8 10\">\n      <circle cx=\"4\" cy=\"5\" r=\"3\" stroke=\"none\" />\n    </svg>\n  );\n});\n\nconst Arrow = React.memo(function Arrow(props) {\n  return (\n    <svg className=\"rt-arrow\" viewBox=\"0 0 6 8\">\n      <g>\n        <path d=\"M 0 0 L 6 4 L 0 8 L 0 0\" />\n      </g>\n    </svg>\n  );\n});\n\nconst DefaultTopLabel = React.memo(function DefaultTopLabel(props: TimelineEventProps) {\n  return <div className=\"rt-label\">{formattedYear(props.event.date)}</div>;\n});\n\nconst DefaultBottomLabel = React.memo(function DefaultBottomLabel(props: TimelineEventProps) {\n  return <div className=\"rt-label\">{formattedYear(props.event.date)}</div>;\n});\n\nconst DefaultHeader = React.memo(function DefaultHeader(props: TimelineEventProps) {\n  return (\n    <div>\n      <h2 className=\"rt-title\">{props.event.title}</h2>\n      <p className=\"rt-date\">{formattedDate(props.event.date)}</p>\n    </div>\n  );\n});\n\nconst DefaultFooter = React.memo(function DefaultFooter(props: TimelineEventProps) {\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    (props.event.onClick || (x => x))(e);\n  };\n\n  return (\n    <button className=\"rt-btn\" onClick={handleClick}>\n      {props.event.buttonText || ''}\n    </button>\n  );\n});\n\nconst DefaultTextBody = React.memo(function DefaultTextBody(props: TimelineEventProps) {\n  return (\n    <div>\n      <p>{props.event.text}</p>\n    </div>\n  );\n});\n\nconst DefaultImageBody = React.memo((props: TimelineEventProps) => {\n  return (\n    <div>\n      <img src={props.event.imageUrl} className=\"rt-image\" alt=\"\" />\n    </div>\n  );\n});\n\nconst ArrowAndDot = React.memo(function ArrowAndDot(props) {\n  return (\n    <div className=\"rt-svg-container\">\n      <Arrow />\n      <Dot />\n    </div>\n  );\n});\n\nconst Clear = React.memo(function Clear(props) {\n  return <li key=\"clear\" className=\"rt-clear\" />;\n});\n\nconst Timeline = React.memo((props: TimelineProps) => {\n  const { events, customComponents, reverseOrder, denseLayout } = props;\n\n  const sortedEvents = events\n    .slice(0)\n    .filter(({ date }) => isValidDate(date))\n    .sort((a, b) => {\n      return reverseOrder\n        ? new Date(b.date).getTime() - new Date(a.date).getTime()\n        : new Date(a.date).getTime() - new Date(b.date).getTime();\n    });\n\n  if (!sortedEvents.length) {\n    return <div />;\n  }\n\n  const { topLabel, bottomLabel, header, footer, imageBody, textBody } = customComponents || {};\n  const TopComponent = (topLabel || DefaultTopLabel) as React.ComponentType<TimelineEventProps>;\n  const BottomComponent = (bottomLabel || DefaultBottomLabel) as React.ComponentType<TimelineEventProps>;\n  const HeaderComponent = (header || DefaultHeader) as React.ComponentType<TimelineEventProps>;\n  const ImageBodyComponent = (imageBody || DefaultImageBody) as React.ComponentType<TimelineEventProps>;\n  const TextBodyComponent = (textBody || DefaultTextBody) as React.ComponentType<TimelineEventProps>;\n  const FooterComponent = (footer || DefaultFooter) as React.ComponentType<TimelineEventProps>;\n  const eventStyles = denseLayout ? { minHeight: 'auto' } : {};\n  const timelineComposition = (\n    <div className=\"rt-timeline-container\">\n      <ul className=\"rt-timeline\">\n        <li key=\"top\" className=\"rt-label-container\">\n          <TopComponent event={takeFirst(sortedEvents)} />\n        </li>\n        {sortedEvents.map((event, index) => {\n          return (\n            <li className='rt-event' key={index} style={eventStyles}>\n              <div className=\"rt-backing\">\n                <ArrowAndDot />\n                <div>\n                  <div className=\"rt-header-container\">\n                    <HeaderComponent event={event} />\n                  </div>\n                  <div className=\"rt-image-container\">\n                    <ImageBodyComponent event={event} />\n                  </div>\n                  <div className=\"rt-text-container\">\n                    <TextBodyComponent event={event} />\n                  </div>\n                  <div className=\"rt-footer-container\">\n                    <FooterComponent event={event} />\n                  </div>\n                </div>\n              </div>\n            </li>\n          );\n        })}\n        <Clear />\n        <li key=\"bottom\" className=\"rt-label-container\">\n          <BottomComponent event={takeLast(sortedEvents)} />\n        </li>\n      </ul>\n    </div>\n  );\n  return <div>{timelineComposition}</div>;\n});\n\nexport default Timeline;\n","import * as R from 'ramda';\n\nimport berlin from './assets/berlin.jpg';\nimport chicago from './assets/chicago.jpg';\nimport cairo from './assets/cairo.jpg';\nimport london from './assets/london.jpg';\nimport ny from './assets/ny.jpg';\nimport paris from './assets/paris.jpg';\nimport rome from './assets/rome.jpg';\nimport seoul from './assets/seoul.jpg';\nimport tokyo from './assets/tokyo.jpg';\nimport madrid from './assets/madrid.jpg';\n\nimport berlin_normalized from './assets/berlin_normalized.jpg';\nimport chicago_normalized from './assets/chicago_normalized.jpg';\nimport cairo_normalized from './assets/cairo_normalized.jpg';\nimport london_normalized from './assets/london_normalized.jpg';\nimport ny_normalized from './assets/ny_normalized.jpg';\nimport paris_normalized from './assets/paris_normalized.jpg';\nimport rome_normalized from './assets/rome_normalized.jpg';\nimport seoul_normalized from './assets/seoul_normalized.jpg';\nimport tokyo_normalized from './assets/tokyo_normalized.jpg';\nimport madrid_normalized from './assets/madrid_normalized.jpg';\n\nimport berlin_odd from './assets/berlin_odd.jpg';\nimport chicago_odd from './assets/chicago_odd.jpg';\nimport cairo_odd from './assets/cairo_odd.jpg';\nimport london_odd from './assets/london_odd.jpg';\nimport ny_odd from './assets/ny_odd.jpg';\nimport paris_odd from './assets/paris_odd.jpg';\nimport rome_odd from './assets/rome_odd.jpg';\nimport seoul_odd from './assets/seoul_odd.jpg';\nimport tokyo_odd from './assets/tokyo_odd.jpg';\nimport madrid_odd from './assets/madrid_odd.jpg';\n\nconst IMAGES = [\n  berlin,\n  chicago,\n  cairo,\n  london,\n  ny,\n  paris,\n  rome,\n  seoul,\n  madrid,\n  tokyo,\n];\n\nconst IMAGES_ODD = [\n  berlin_odd,\n  chicago_odd,\n  cairo_odd,\n  london_odd,\n  ny_odd,\n  paris_odd,\n  rome_odd,\n  seoul_odd,\n  madrid_odd,\n  tokyo_odd,\n];\n\nconst IMAGES_NORMALIZED = [\n  berlin_normalized,\n  chicago_normalized,\n  cairo_normalized,\n  london_normalized,\n  ny_normalized,\n  paris_normalized,\n  rome_normalized,\n  seoul_normalized,\n  madrid_normalized,\n  tokyo_normalized,\n];\n\nconst CITY_NAMES = [\n  'Berlin, Germany',\n  'Chicago, Illinois',\n  'Cairo, Egypt',\n  'London, England',\n  'New York, New York',\n  'Paris, France',\n  'Rome, Italy',\n  'Seoul, South Korea',\n  'Madrid, Spain',\n  'Tokyo, Japan',\n];\n\n\nconst IPSUM = `Sed leo elit, pellentesque sit amet congue quis, ornare nec lorem. Phasellus tincidunt rhoncus magna,\neget elementum odio rutrum fermentum. Ut a justo lacus. Maecenas blandit molestie felis ac viverra. Pellentesque\nsagittis ligula neque, sit amet feugiat massa tempor sed. Duis id bibendum ex, pulvinar tincidunt orci. Curabitur\nid sem urna. Maecenas sed elit malesuada, cursus ligula ut, vestibulum lorem. Suspendisse vitae ultrices libero.\nMauris maximus, ligula vitae tincidunt scelerisque, ipsum magna euismod massa, eu vulputate enim est tempus sem.\nMaecenas id nibh vitae ante volutpat facilisis nec eget velit. Proin et ligula feugiat, auctor tellus sit amet,\naccumsan neque. Quisque porttitor lectus quis elit fermentum, a facilisis est suscipit. Integer consectetur dapibus\nnisi, ut lacinia enim vulputate vitae. Curabitur id diam mauris. Duis dictum, dolor at porttitor aliquet, justo libero\nmattis magna, eu pellentesque augue mauris eget erat. Pellentesque lacinia velit nec ullamcorper mollis. Pellentesque\nlacus tortor, maximus eget tincidunt non, luctus scelerisque odio. Suspendisse potenti. Etiam vel augue blandit, auctor\nsem sit amet, imperdiet dolor. Ut a quam laoreet, feugiat orci sed, feugiat nulla. Nulla gravida nisi eu ex egestas\ndapibus.`;\n\nfunction getCitiesWithImages(type) {\n  const zipFn = (title, imageUrl) => {\n    return { title, imageUrl };\n  };\n  let images = IMAGES;\n  if (type === 'normalized') {\n    images = IMAGES_NORMALIZED;\n  } else if (type === 'odd') {\n    images = IMAGES_ODD;\n  }\n  return R.zipWith(zipFn, CITY_NAMES, images);\n}\n\nfunction addDays(date, days) {\n  var result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n};\n\nfunction randomText(){\n  const minTextLength = 50;\n  return R.slice(0, Math.random() * (R.length(IPSUM) - minTextLength) + minTextLength, IPSUM);\n}\n\nexport function getSampleData(imageType) {\n  const cities = getCitiesWithImages(imageType);\n  const mapWithIndex = R.addIndex(R.map);\n  return mapWithIndex((location, index) => {\n    return R.merge(\n      {\n        date: addDays(new Date('2013-12-08'), index * 8),\n        text: randomText(),\n        buttonText: 'Read More',\n        onClick: () => {\n          const city = R.head(R.split(', ', location.title));\n          window.open(`https://wikipedia.org/wiki/${city}`);\n        },\n        extras: {\n          foo: '#Travel',\n        },\n      },\n      location\n    );\n  }, cities);\n}\n","import React, { useState, useCallback } from 'react';\nimport './App.css';\nimport './lib/timeline.scss';\nimport Timeline, { TimelineEvent, TimelineCustomComponents, TimelineProps, TimelineEventProps } from './lib/timeline';\nimport placeholder from './assets/placeholder.png';\n// @ts-ignore\nimport { getSampleData } from './data';\n\nconst CustomTopLabel = (props: TimelineEventProps) => {\n  return (\n    <div className=\"custom-top-label\">\n      <p>Top Label</p>\n    </div>\n  );\n};\n\nconst CustomBottomLabel = (props: TimelineEventProps) => {\n  return (\n    <div className=\"custom-bottom-label\">\n      <p>Bottom Label</p>\n    </div>\n  );\n};\n\nconst CustomHeader = (props: TimelineEventProps) => {\n  return (\n    <div className=\"custom-header\">\n      <h3>Header</h3>\n    </div>\n  );\n};\n\nconst CustomFooter = (props: TimelineEventProps) => {\n  return (\n    <div className=\"custom-footer\">\n      <h3>Footer</h3>\n    </div>\n  );\n};\n\nconst CustomTextBody = (props: TimelineEventProps) => {\n  return (\n    <div className=\"custom-text-body\">\n      <h3>Text Body</h3>\n    </div>\n  );\n};\n\nconst CustomImageBody = (props: TimelineEventProps) => {\n  const { imageUrl } = props.event;\n  return (\n    <div className=\"custom-image-body\">\n      <h3 className=\"image-body-label\">Image Body</h3>\n      <img src={imageUrl} alt=\"\" className=\"rt-image\" />\n    </div>\n  );\n};\n\nconst TimelineExample = React.memo(\n  (\n    props: {},\n    state: {\n      events: Array<TimelineEvent>;\n      useCustomComponents: boolean;\n      reverseOrder: boolean;\n      denseLayout: boolean;\n      imageType: string;\n    }\n  ) => {\n    const [imageType, setImageType] = useState('normal');\n    const [events, setEvents] = useState(getSampleData(imageType));\n    const [useCustomComponents, setUseCustomComponents] = useState(false);\n    const [reverseOrder, setReverseOrder] = useState(false);\n    const [denseLayout, setDenseLayout] = useState(false);\n\n    const onToggleReverseOrder = useCallback(() => setReverseOrder(!reverseOrder), [reverseOrder]);\n    const onToggleDenseLayout = useCallback(() => setDenseLayout(!denseLayout), [denseLayout]);\n    const onToggleUseCustomComponents = useCallback(() => setUseCustomComponents(!useCustomComponents), [\n      useCustomComponents,\n    ]);\n    const onToggleImageType = useCallback(() => {\n      const newImageType = imageType === 'normal' ? 'odd' : 'normal';\n      setImageType(newImageType);\n      setEvents(getSampleData(newImageType));\n    }, [imageType]);\n\n    const timeline = <Timeline events={events} reverseOrder={reverseOrder} />;\n    const customComponents = useCustomComponents\n      ? ({\n          topLabel: CustomTopLabel,\n          bottomLabel: CustomBottomLabel,\n          header: CustomHeader,\n          imageBody: CustomImageBody,\n          textBody: CustomTextBody,\n          footer: CustomFooter,\n        } as TimelineCustomComponents)\n      : null;\n    return (\n      <div>\n        <div style={{ textAlign: 'center' }}>\n          <h1>React Image Timeline</h1>\n          <h4>resize window to see mobile layout</h4>\n        </div>\n        <div className=\"config-container\">\n          <div className=\"toggle-container\">\n            <div>\n              <input type=\"checkbox\" onChange={onToggleUseCustomComponents} checked={useCustomComponents} />\n              <strong>Use Custom Components</strong>\n            </div>\n            <div>\n              <input type=\"checkbox\" onChange={onToggleReverseOrder} checked={reverseOrder} />\n              <strong>Reverse Order</strong>\n            </div>\n            <div>\n              <input type=\"checkbox\" onChange={onToggleImageType} checked={imageType !== 'normal'} />\n              <strong>Non-unform Images</strong>\n            </div>\n            <div>\n              <input type=\"checkbox\" onChange={onToggleDenseLayout} checked={denseLayout} />\n              <strong>Dense Layout</strong>\n            </div>\n          </div>\n        </div>\n        <hr />\n        <Timeline events={events} customComponents={customComponents} reverseOrder={reverseOrder} denseLayout={denseLayout} />\n      </div>\n    );\n  }\n);\n\nconst App = TimelineExample;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// @ts-ignore\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}